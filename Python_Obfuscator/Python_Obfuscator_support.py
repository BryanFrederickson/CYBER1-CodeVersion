#! /usr/bin/env python3
#  -*- coding: utf-8 -*-
#
# Support module generated by PAGE version 8.0
#  in conjunction with Tcl version 8.6
#    Mar 05, 2025 02:35:52 PM PST  platform: Windows NT

import tkinter as tk
from tkinter.constants import *
from ScrolledCheckedListBox import ScrolledCheckedListBox
import tkinter.scrolledtext as st
from tkinter import filedialog
import os

import Python_Obfuscator

_debug = True # False to eliminate debug printing from callback functions.

def init_params():
    global params
    params=dict()
    params["input_filename"]=""
    params["input_data"]=""
    params["output_dir"]=""


def main(*args):
    '''Main entry point for the application.'''
    global root
    root = tk.Tk()
    root.protocol( 'WM_DELETE_WINDOW' , root.destroy)
    # Creates a toplevel widget.
    global _top1, _w1
    _top1 = root
    _w1 = Python_Obfuscator.Toplevel1(_top1)
    init_params()
    root.mainloop()

Custom = ScrolledCheckedListBox
Custom2 = st.ScrolledText

def upload_file(event=None):
    _w1.L_inputError.configure(font="-family {Segoe UI} -size 9 -weight bold -underline 1")
    _w1.L_inputError.configure(foreground="#d70005")
    inputpath = filedialog.askopenfilename(
        #initialdir=os.getcwd(),
        initialdir=os.path.dirname(__file__),
        title="Select Python File",
        filetypes=[("Python Source File", "*.py")],
    )
    if inputpath:
        try:
            with open(inputpath, "r") as input_file:
                params["input_filename"]=os.path.basename(inputpath)
                params["input_data"]=input_file.read()
                _w1.E_inputFilePath.configure(state='normal')
                _w1.E_inputFilePath.delete(0, tk.END)
                _w1.E_inputFilePath.insert(tk.END, inputpath)
                _w1.E_inputFilePath.configure(state='readonly')
                _w1.E_inputFilePath.xview_moveto(1)
                _w1.L_inputError.configure(text="")
        except Exception:
            params["input_filename"]=""
            params["input_data"]=""
            _w1.E_inputFilePath.configure(state='normal')
            _w1.E_inputFilePath.delete(0, tk.END)
            _w1.E_inputFilePath.configure(state='readonly')
            _w1.L_inputError.configure(text="Error reading file.")
    else:
        params["input_filename"]=""
        params["input_data"]=""
        _w1.E_inputFilePath.configure(state='normal')
        _w1.E_inputFilePath.delete(0, tk.END)
        _w1.E_inputFilePath.configure(state='readonly')
        _w1.L_inputError.configure(text="No valid file selected.")

def select_outDir(event=None):
    _w1.L_outputError.configure(font="-family {Segoe UI} -size 9 -weight bold -underline 1")
    _w1.L_outputError.configure(foreground="#d70005")
    out_dir=filedialog.askdirectory(initialdir=os.path.dirname(__file__))
    if out_dir:
        params["output_dir"]=out_dir
        _w1.E_outputDirectory.configure(state='normal')
        _w1.E_outputDirectory.delete(0, tk.END)
        _w1.E_outputDirectory.insert(tk.END, out_dir)
        _w1.E_outputDirectory.configure(state='readonly')
        _w1.E_outputDirectory.xview_moveto(1)
        _w1.L_outputError.configure(text="")
    else:
        params["output_dir"]=""
        _w1.E_outputDirectory.configure(state='normal')
        _w1.E_outputDirectory.delete(0, tk.END)
        _w1.E_outputDirectory.configure(state='readonly')
        _w1.L_outputError.configure(text="No directory selected.")

if __name__ == '__main__':
    Python_Obfuscator.start_up()




